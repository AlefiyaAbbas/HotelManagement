/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package Frames;

import java.awt.Color;
import java.sql.*;
import java.text.DateFormat;
import java.text.SimpleDateFormat;
import java.time.format.DateTimeFormatter;
import javax.swing.JOptionPane;
import javax.swing.JScrollPane;
import java.awt.event.*;

/**
 *
 * @author RSSH
 */
public class MainFrame extends javax.swing.JFrame {

    /**
     * Creates new form MainFrame
     */
    public MainFrame() {
        initComponents();
        this.setLocationRelativeTo(null);
        MainScrollPanel.setViewportView(ContentPanel);
        revalidate();
        repaint();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        MainBackground = new javax.swing.JPanel();
        MainButtonBackground = new javax.swing.JPanel();
        MainAdd = new javax.swing.JButton();
        MainMissed = new javax.swing.JButton();
        MainExit = new javax.swing.JButton();
        MainUpcoming = new javax.swing.JButton();
        MainCompleted = new javax.swing.JButton();
        MainScrollPanel = new javax.swing.JScrollPane();
        ContentPanel = new javax.swing.JPanel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("TimeKeeper");

        MainBackground.setBackground(new java.awt.Color(0, 206, 201));
        MainBackground.setPreferredSize(new java.awt.Dimension(800, 600));
        MainBackground.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                MainBackgroundFocusGained(evt);
            }
        });

        MainButtonBackground.setBackground(new java.awt.Color(0, 206, 201));

        MainAdd.setBackground(new java.awt.Color(255, 255, 255));
        MainAdd.setFont(new java.awt.Font("Verdana", 0, 14)); // NOI18N
        MainAdd.setText("ADD");
        MainAdd.setBorder(null);
        MainAdd.setContentAreaFilled(false);
        MainAdd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                MainAddActionPerformed(evt);
            }
        });

        MainMissed.setBackground(new java.awt.Color(255, 255, 255));
        MainMissed.setFont(new java.awt.Font("Verdana", 0, 14)); // NOI18N
        MainMissed.setText("MISSED");
        MainMissed.setBorder(null);
        MainMissed.setContentAreaFilled(false);
        MainMissed.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                MainMissedActionPerformed(evt);
            }
        });

        MainExit.setBackground(new java.awt.Color(255, 255, 255));
        MainExit.setFont(new java.awt.Font("Verdana", 0, 14)); // NOI18N
        MainExit.setText("EXIT");
        MainExit.setBorder(null);
        MainExit.setContentAreaFilled(false);
        MainExit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                MainExitActionPerformed(evt);
            }
        });

        MainUpcoming.setBackground(new java.awt.Color(255, 255, 255));
        MainUpcoming.setFont(new java.awt.Font("Verdana", 0, 14)); // NOI18N
        MainUpcoming.setText("UPCOMING");
        MainUpcoming.setBorder(null);
        MainUpcoming.setContentAreaFilled(false);
        MainUpcoming.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                MainUpcomingActionPerformed(evt);
            }
        });

        MainCompleted.setBackground(new java.awt.Color(255, 255, 255));
        MainCompleted.setFont(new java.awt.Font("Verdana", 0, 14)); // NOI18N
        MainCompleted.setText("COMPLETED");
        MainCompleted.setBorder(null);
        MainCompleted.setContentAreaFilled(false);
        MainCompleted.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                MainCompletedActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout MainButtonBackgroundLayout = new javax.swing.GroupLayout(MainButtonBackground);
        MainButtonBackground.setLayout(MainButtonBackgroundLayout);
        MainButtonBackgroundLayout.setHorizontalGroup(
            MainButtonBackgroundLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(MainButtonBackgroundLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(MainUpcoming, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(22, 22, 22)
                .addComponent(MainCompleted, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(MainAdd, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(MainMissed, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(MainExit, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        MainButtonBackgroundLayout.setVerticalGroup(
            MainButtonBackgroundLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(MainButtonBackgroundLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(MainButtonBackgroundLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(MainUpcoming, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(MainAdd, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(MainButtonBackgroundLayout.createSequentialGroup()
                        .addGroup(MainButtonBackgroundLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(MainCompleted, javax.swing.GroupLayout.DEFAULT_SIZE, 48, Short.MAX_VALUE)
                            .addComponent(MainMissed, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(MainExit, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );

        ContentPanel.setBackground(new java.awt.Color(129, 236, 236));
        ContentPanel.setPreferredSize(new java.awt.Dimension(700, 1500));

        javax.swing.GroupLayout ContentPanelLayout = new javax.swing.GroupLayout(ContentPanel);
        ContentPanel.setLayout(ContentPanelLayout);
        ContentPanelLayout.setHorizontalGroup(
            ContentPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 779, Short.MAX_VALUE)
        );
        ContentPanelLayout.setVerticalGroup(
            ContentPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 1500, Short.MAX_VALUE)
        );

        MainScrollPanel.setViewportView(ContentPanel);

        javax.swing.GroupLayout MainBackgroundLayout = new javax.swing.GroupLayout(MainBackground);
        MainBackground.setLayout(MainBackgroundLayout);
        MainBackgroundLayout.setHorizontalGroup(
            MainBackgroundLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(MainBackgroundLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(MainBackgroundLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(MainScrollPanel, javax.swing.GroupLayout.DEFAULT_SIZE, 798, Short.MAX_VALUE)
                    .addComponent(MainButtonBackground, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 798, Short.MAX_VALUE))
                .addContainerGap())
        );
        MainBackgroundLayout.setVerticalGroup(
            MainBackgroundLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(MainBackgroundLayout.createSequentialGroup()
                .addGap(6, 6, 6)
                .addComponent(MainButtonBackground, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(MainScrollPanel, javax.swing.GroupLayout.PREFERRED_SIZE, 480, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(MainBackground, javax.swing.GroupLayout.PREFERRED_SIZE, 818, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(MainBackground, javax.swing.GroupLayout.DEFAULT_SIZE, 573, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void MainMissedActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_MainMissedActionPerformed
        //MainUpcomingActionPerformed(evt);
        int i = 0;
        DateFormat dateFormat = new SimpleDateFormat("yyyy-MM-dd");
        DateFormat time = new SimpleDateFormat("HH:mm:ss");

        try {
            Class.forName("com.mysql.cj.jdbc.Driver");
            Connection con = DriverManager.getConnection(
                    "jdbc:mysql://localhost:3306/timekeeper", "root", "srshah");
            ContentPanel.removeAll();
            Statement stmt = con.createStatement();
            ResultSet rs = stmt.executeQuery("select * from events where completed = 0 and DueDate<=curdate() order by Important desc, DueDate;");
            Statement curtime = con.createStatement();
            ResultSet rstime = curtime.executeQuery("select curtime(), curdate();");
            rstime.next();
            while (rs.next()) {
                if (dateFormat.format(rstime.getDate("curdate()")).equals(dateFormat.format(rs.getDate("DueDate")))) {
                    if (rstime.getTime("curtime()").before(rs.getTime("DueTime"))) {
                        continue;
                    }
                }
                ContentPane Panel = new ContentPane();
                Panel.setBounds(50, 50 + (i * 100), 700, 100);
                Panel.lblID.setText(Integer.toString(rs.getInt("ID")));
                Panel.btnDelete.setVisible(true);
                Panel.lblDID.setText(rs.getString("EventName"));
                Panel.lblDueDate.setText(dateFormat.format(rs.getDate("DueDate")));
                Panel.lblDueTime.setText(time.format(rs.getTime("DueTime")));
                Panel.lblCategoryName.setText(rs.getString("Category"));
                Panel.Important.setText(Integer.toString(rs.getInt("Important")));
                Panel.setBackground(new Color(204, 204, 204));

                if (i % 2 != 0) {
                    Panel.setBackground(new Color(178, 190, 195));
                }
                //Panel.lblDateTime.setText(Time.rs.getTime("DueTime"));
                ContentPanel.add(Panel);
                i++;
            }
            con.close();
        } catch (Exception e) {
            System.out.println(e);
        }
        MainScrollPanel.setViewportView(ContentPanel);
        revalidate();
        repaint();

    }//GEN-LAST:event_MainMissedActionPerformed

    private void MainUpcomingActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_MainUpcomingActionPerformed
        int i = 0;
        int j = 0;
        try {
            Class.forName("com.mysql.cj.jdbc.Driver");
            Connection con = DriverManager.getConnection(
                    "jdbc:mysql://localhost:3306/HotelManagement", "root", "srshah");
            ContentPanel.removeAll();
            Statement stmt = con.createStatement();
            Statement rstmt = con.createStatement();

            ResultSet rs = stmt.executeQuery("select * from hotel");

            while (rs.next()) {
                i = 0;
                ContentPane Panel = new ContentPane();
                Panel.setBounds(50, 50 + (j * 100), 700, 100);
                Panel.lblID.setText(Integer.toString(rs.getInt("ID")));
                Panel.btnDelete.setVisible(false);
                Panel.btnComplete.setVisible(false);
                Panel.btnComplete2.setVisible(false);
                Panel.lblCategoryName.setText(rs.getString("Name"));
                Panel.lblDID.setText("Hotel ID: " + rs.getString("ID"));
                Panel.lblID.setText(rs.getString("ID"));
                Panel.lblDueTime.setText(rs.getString("Location"));
                Integer.parseInt(rs.getString("ID"));
                ResultSet room = rstmt.executeQuery("select * from rooms where hotelid =" + rs.getString("ID"));
                while (room.next()) {
                    i++;
                }
                Panel.lblDueDate.setText("No. of Rooms: " + Integer.toString(i));
                if (j % 2 == 0) {
                    Panel.setBackground(new Color(255, 234, 167));
                }
                ContentPanel.add(Panel);
                j++;
            }

        } catch (Exception e) {
            System.out.println(e);
        }
        MainScrollPanel.setViewportView(ContentPanel);
        revalidate();
        repaint();
    }//GEN-LAST:event_MainUpcomingActionPerformed

    private void MainExitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_MainExitActionPerformed
        System.exit(0);
    }//GEN-LAST:event_MainExitActionPerformed

    private void MainCompletedActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_MainCompletedActionPerformed
        DateFormat dateFormat = new SimpleDateFormat("yyyy-MM-dd");
        DateFormat time = new SimpleDateFormat("hh:mm:ss");
        int i = 0;
        try {
            Class.forName("com.mysql.cj.jdbc.Driver");
            Connection con = DriverManager.getConnection(
                    "jdbc:mysql://localhost:3306/timekeeper", "root", "srshah");

            ContentPanel.removeAll();
            Statement stmt = con.createStatement();
            ResultSet rs = stmt.executeQuery("select * from events where completed = 1 order by Important desc, DueDate;");
            while (rs.next()) {
                ContentPane Panel = new ContentPane();
                Panel.setBounds(50, 50 + (i * 100), 700, 100);
                Panel.btnDelete.setVisible(true);
                Panel.lblID.setText(Integer.toString(rs.getInt("ID")));
                Panel.lblDID.setText(rs.getString("EventName"));
                Panel.lblDueDate.setText(dateFormat.format(rs.getDate("DueDate")));
                Panel.lblDueTime.setText(time.format(rs.getTime("DueTime")));
                Panel.lblCategoryName.setText(rs.getString("Category"));
                Panel.Important.setText(Integer.toString(rs.getInt("Important")));
                Panel.btnComplete.setVisible(false);
                Panel.setBackground(new Color(85, 239, 196));
                if (i % 2 != 0) {
                    Panel.setBackground(new Color(51, 217, 178));
                }
                //Panel.lblDateTime.setText(Time.rs.getTime("DueTime"));
                ContentPanel.add(Panel);
                i++;
            }
        } catch (Exception e) {
            System.out.println(e);
        }
        MainScrollPanel.setViewportView(ContentPanel);
        revalidate();
        repaint();
    }//GEN-LAST:event_MainCompletedActionPerformed

    private void MainAddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_MainAddActionPerformed
        EventDesc ed = new EventDesc();
        ed.setVisible(true);
        ed.btnAddEvent.setVisible(true);
        ed.btnCancel.setVisible(true);
        ed.txtEventName.setEditable(true);
        ed.txtCategoryName.setEditable(true);
        ed.chbImportant.setEnabled(true);
        ed.cmbDD.setEnabled(true);
        ed.cmbMM.setEnabled(true);
        ed.cmbYYYY.setEnabled(true);
        ed.cmbHours.setEnabled(true);
        ed.cmbMinutes.setEnabled(true);
        ed.cmbSeconds.setEnabled(true);
    }//GEN-LAST:event_MainAddActionPerformed

    private void MainBackgroundFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_MainBackgroundFocusGained

    }//GEN-LAST:event_MainBackgroundFocusGained

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {

        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MainFrame().setVisible(true);
            }
        });
        //JOptionPane.showMessageDialog(null, "Hello World");

        try {
            Class.forName("com.mysql.cj.jdbc.Driver");
            Connection con = DriverManager.getConnection(
                    "jdbc:mysql://localhost:3306/timekeeper", "root", "srshah");
//here sonoo is database name, root is username and password  
            Statement stmt = con.createStatement();
            ResultSet rs = stmt.executeQuery("select * from Events");
            while (rs.next()) {

            }
            con.close();
        } catch (Exception e) {
            System.out.println(e);
        }
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    public static javax.swing.JPanel ContentPanel;
    private javax.swing.JButton MainAdd;
    private javax.swing.JPanel MainBackground;
    private javax.swing.JPanel MainButtonBackground;
    private javax.swing.JButton MainCompleted;
    private javax.swing.JButton MainExit;
    private javax.swing.JButton MainMissed;
    private javax.swing.JScrollPane MainScrollPanel;
    public javax.swing.JButton MainUpcoming;
    // End of variables declaration//GEN-END:variables
}
